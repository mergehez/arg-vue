<?php

namespace App\Http\Controllers;

use App\Models\Document;
use App\Models\KeyValue;
use App\Models\Menu;
use App\Models\Post;
use App\Models\Slider;
use DB;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Str;
use Inertia\Inertia;
use Throwable;
use Intervention\Image\Laravel\Facades\Image;

class PanelController extends Controller
{
    public function home(Request $request)
    {
        return Inertia::render('Panel/PanelHome', [
            'pageData' => [
            ]
        ]);
    }
    public function settings(Request $request)
    {
        return Inertia::render('Panel/PanelSettings', [
            'pageData' => [
                'keyValues' => KeyValue::all(['key', 'value'])->mapWithKeys(fn($item) => [$item['key'] => $item['value']]),
                'menus' => Menu::all(['id', 'title'])->mapWithKeys(fn($item) => [$item['id'] => $item['title']]),
                'sliders' => Slider::all(['id', 'title'])->mapWithKeys(fn($item) => [$item['id'] => $item['title']]),
            ]
        ]);
    }
    public function updateSettings(Request $request)
    {
        $data = $request->validate([
            'siteTitle' => ['required', 'string', 'max:60'],
            'siteDesc' => ['required', 'string', 'max:160'],
            'mainMenu' => ['required', 'integer', 'exists:menus,id'],
            'mobileMenu' => ['required', 'integer', 'exists:menus,id'],
            'homeSlider' => ['required', 'integer', 'exists:sliders,id'],
            'instagramUrl' => ['nullable', 'active_url'],
            'twitterUrl' => ['nullable', 'active_url'],
            'facebookUrl' => ['nullable', 'active_url'],
            'youtubeUrl' => ['nullable', 'active_url'],
            'whatsappNumber' => ['nullable', 'string'],
            'telegramNumber' => ['nullable', 'string'],
            'contactEmail' => ['nullable', 'email'],
        ]);
        $data = array_map(fn($t) => $t ?? '', $data);

        DB::transaction(function () use ($data) {
            foreach ($data as $key => $value) {
                KeyValue::where('key', $key)
                    ->update(['value' => $value]);
            }
        });

        return true;
    }
}

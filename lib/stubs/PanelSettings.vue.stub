<script setup lang="ts">

import AppLayoutPanel from "@/Components/AppLayoutPanel.vue";
import {__} from "@/Helpers/inertia_helpers";
import {IHead} from "@argvue/Components";
import {FormSelect, TextInput, InputError} from '@argvue/Components'
import {TModelForm, usePage} from "@argvue/utils";
import {_createForm, _formSubmitFn} from "@/Helpers/form_helpers";
import {KeyValueKey} from "@/Models/generated_enums";

defineOptions({layout: AppLayoutPanel});

const page = usePage<{
    keyValues: Record<KeyValueKey | 'id', string>,
    menus: Record<number, string>,
    sliders: Record<number, string>,
}>();

type TKeyValueForm = TModelForm<Record<KeyValueKey | 'id', string>>;
function createKeyValueForm(itemGetter: () => Record<KeyValueKey | 'id', string>|undefined){
    const form = _createForm(itemGetter, (item) => ({
        id: '1',
        [KeyValueKey.siteTitle]: item?.[KeyValueKey.siteTitle] || '',
        [KeyValueKey.siteDesc]: item?.[KeyValueKey.siteDesc] || '',
        [KeyValueKey.mainMenu]: item?.[KeyValueKey.mainMenu] || '1',
        [KeyValueKey.mobileMenu]: item?.[KeyValueKey.mobileMenu] || '1',
        [KeyValueKey.homeSlider]: item?.[KeyValueKey.homeSlider] || '1',
        [KeyValueKey.facebookUrl]: item?.[KeyValueKey.facebookUrl] || '',
        [KeyValueKey.instagramUrl]: item?.[KeyValueKey.instagramUrl] || '',
        [KeyValueKey.youtubeUrl]: item?.[KeyValueKey.youtubeUrl] || '',
        [KeyValueKey.twitterUrl]: item?.[KeyValueKey.twitterUrl] || '',
        [KeyValueKey.telegramNumber]: item?.[KeyValueKey.telegramNumber] || '',
        [KeyValueKey.whatsappNumber]: item?.[KeyValueKey.whatsappNumber] || '',
        [KeyValueKey.contactEmail]: item?.[KeyValueKey.contactEmail] || '',
    } satisfies TKeyValueForm))

    return {
        form,
        submit: () => _formSubmitFn(form as any, itemGetter(), 'key_values')
    }
}
const {form, submit} = createKeyValueForm(() => page.props.pageData.keyValues);
</script>

<template>
    <form @submit.prevent="submit" class="flex flex-col py-3">
        <IHead :title="__('settings')"/>
        <div class="px-3 flex">
            <h1 class="text-2xl font-bold">{{ __('general') }}</h1>
            <i class="flex-1"></i>
            <button type="submit" class="btn btn-success py-px gap-1" :disabled="!form.isDirty" :class="!form.isDirty ? '!opacity-50':''">
                <span class="icon icon-[mdi--content-save] text-lg"></span>
                <span class="py-1">{{ __('save') }}</span>
            </button>
        </div>

        <div class="grid gap-2 items-center px-3 pt-5 text-sm" style="grid-template-columns: auto 1fr">
            <div class="col-span-2 font-bold text-xl">SEO:</div>

            <label class="font-bold" for="">{{ __('site_title') }}</label>
            <TextInput
                v-model="form.siteTitle"
                class="py-1"
                required
                maxlength="60"
            />
            <i></i>
            <div class="text-xs -mt-2 pt-px pl-1 opacity-80">{{ __('max_x_characters', {':x': '60'}) }}</div>
            <InputError :message="form.errors.siteTitle" second-col/>

            <label class="font-bold self-start" for="">{{ __('description') }}</label>
            <div class="grid">
                <TextInput
                    v-model="form.siteDesc"
                    tag="textarea"
                    class="py-1"
                    required
                    maxlength="160"
                />
                <div class="text-xs pl-1 opacity-80">{{ __('site_description_placeholder') }}</div>
            </div>
            <InputError :message="form.errors.siteDesc" second-col/>

            <div class="col-span-2 font-bold text-xl border-t border-x3 pt-2 mt-2">{{ __('settings') }}:</div>


            <!--<label class="font-bold" for="">{{ __('main_menu') }}</label>-->
            <!--<FormSelect-->
            <!--    v-model="form.mainMenu"-->
            <!--    :options="page.props.pageData.menus"-->
            <!--    class="py-1"-->
            <!--/>-->
            <!--<InputError :message="form.errors.mainMenu" second-col/>-->

            <!--<label class="font-bold" for="">{{ __('mobile_menu') }}</label>-->
            <!--<FormSelect-->
            <!--    v-model="form.mobileMenu"-->
            <!--    :options="page.props.pageData.menus"-->
            <!--    class="py-1"-->
            <!--/>-->
            <!--<InputError :message="form.errors.mobileMenu" second-col/>-->

            <label class="font-bold" for="">{{ __('home_slider') }}</label>
            <FormSelect
                v-model="form.homeSlider"
                :options="page.props.pageData.sliders"
                class="py-1"
            />
            <InputError :message="form.errors.homeSlider" second-col/>

            <div class="col-span-2 font-bold text-xl border-t border-x3 pt-2 mt-2">Social:</div>

            <label class="font-bold" for="">{{ __('instagram_url') }}</label>
            <TextInput
                v-model="form.instagramUrl"
                type="url"
                class="py-1"
                :placeholder="__('optional')"
            />
            <InputError :message="form.errors.instagramUrl" second-col/>

            <label class="font-bold" for="">{{ __('twitter_url') }}</label>
            <TextInput
                v-model="form.twitterUrl"
                type="url"
                class="py-1"
                :placeholder="__('optional')"
            />
            <InputError :message="form.errors.twitterUrl" second-col/>

            <label class="font-bold" for="">{{ __('facebook_url') }}</label>
            <TextInput
                v-model="form.facebookUrl"
                type="url"
                class="py-1"
                :placeholder="__('optional')"
            />
            <InputError :message="form.errors.facebookUrl" second-col/>

            <label class="font-bold" for="">{{ __('youtube_url') }}</label>
            <TextInput
                v-model="form.youtubeUrl"
                type="url"
                class="py-1"
                :placeholder="__('optional')"
            />
            <InputError :message="form.errors.whatsappNumber" second-col/>

            <label class="font-bold" for="">{{ __('telegram_number') }}</label>
            <TextInput
                v-model="form.telegramNumber"
                type="tel"
                class="py-1"
                :placeholder="__('phone_number') +' (' + __('optional') + ')'"
            />
            <InputError :message="form.errors.telegramNumber" second-col/>

            <label class="font-bold" for="">{{ __('whatsapp_number') }}</label>
            <TextInput
                v-model="form.whatsappNumber"
                type="tel"
                class="py-1"
                :placeholder="__('phone_number') +' (' + __('optional') + ')'"
            />
            <InputError :message="form.errors.whatsappNumber" second-col/>

            <label class="font-bold" for="">{{ __('contact_email') }}</label>
            <TextInput
                v-model="form.contactEmail"
                type="email"
                class="py-1"
                required
            />
            <InputError :message="form.errors.contactEmail" second-col/>
        </div>
    </form>
</template>